#include <stdio.h>

#define SIZE 4  // Matrix and Kernel size

// Function to perform 2D convolution
void convolution2D(int input[SIZE][SIZE], int kernel[SIZE][SIZE], int output[1][1]) {
    int sum = 0;

    // Apply convolution operation
    for (int m = 0; m < SIZE; m++) {
        for (int n = 0; n < SIZE; n++) {
            sum += input[m][n] * kernel[m][n];
        }
    }

    // Store the result in the output matrix
    output[0][0] = sum;
}

int main() {
    // Define 4x4 input matrix
    int input[SIZE][SIZE] = {
        {1, 2, 3, 4},
        {5, 6, 7, 8},
        {9, 10, 11, 12},
        {13, 14, 15, 16}
    };

    // Define 4x4 kernel (filter)
    int kernel[SIZE][SIZE] = {
        {1, 0, -1, 0},
        {1, 0, -1, 0},
        {1, 0, -1, 0},
        {1, 0, -1, 0}
    };

    // Output matrix (since input and kernel are the same size, output is 1x1)
    int output[1][1];

    // Perform convolution
    convolution2D(input, kernel, output);

    // Print result
    printf("Output Matrix:\n");
    printf("%d\n", output[0][0]);

    return 0;
}
